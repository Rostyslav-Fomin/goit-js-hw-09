{"mappings":"gfAAA,IAQIA,EACAC,EACAC,EAVJC,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,qBAAsBJ,SAASC,cAAc,WAqD/C,SAASI,EAAcC,EAAUC,GAS/B,OARgB,IAAIC,SAAQ,SAACC,EAASC,GACdC,KAAKC,SAAW,GAEpChB,EAAAiB,OAAOC,QAAQ,uBAAwCC,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAE7DX,EAAAiB,OAAOG,QAAQ,sBAAqCD,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,IAnDhET,EAAKM,qBAAqBa,iBAAiB,SAiB3C,SAAiBC,G,kBAsBHC,YAAW,WACnBd,EAAce,EAAG3B,E,GAChBA,E,EAtBL,GADAyB,EAAEG,iBACE3B,EAAM,C,kBAQFC,GAAU2B,IACZC,GAAY7B,EACZ4B,GAAS,GAEDH,YAAW,WACnBd,EAAcmB,EAAIC,GAAc/B,E,GAC/B6B,E,EAbDE,EAAahC,EACb8B,EAAW9B,EACX6B,EAAQ,EACFH,YAAW,WACnBd,EA3BS,EA2BeZ,E,GACvBA,GACH,IAAK,IAAIiC,EAAI,EAAGA,GAAK/B,EAAQ+B,GAAK,EAACC,EAAAD,GASnC,M,CAEFjC,EAAQK,EAAKC,MAAM6B,MACnB,IAAK,IAAIC,EAAI,EAAGA,GAAKlC,EAAQkC,GAAK,EAACC,EAAAD,E,IArCrC/B,EAAKC,MAAMkB,iBAAiB,SAI5B,SAAiBC,GACfzB,EAAQsC,OAAOb,EAAEc,OAAOJ,M,IAJ1B9B,EAAKI,KAAKe,iBAAiB,SAO3B,SAAgBC,GACdxB,EAAOqC,OAAOb,EAAEc,OAAOJ,M,IAPzB9B,EAAKK,OAAOc,iBAAiB,SAU7B,SAAkBC,GAChBvB,EAASoC,OAAOb,EAAEc,OAAOJ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  createPromisesButton: document.querySelector('button'),\n};\nlet delay;\nlet step;\nlet amount;\nlet position = 1;\nlet timerId = null;\n\nrefs.createPromisesButton.addEventListener('click', onClick);\nrefs.delay.addEventListener('input', onDelay);\nrefs.step.addEventListener('input', onStep);\nrefs.amount.addEventListener('input', onAmount);\n\nfunction onDelay(e) {\n  delay = Number(e.target.value);\n}\n\nfunction onStep(e) {\n  step = Number(e.target.value);\n}\n\nfunction onAmount(e) {\n  amount = Number(e.target.value);\n}\n\nfunction onClick(e) {\n  e.preventDefault();\n  if (step) {\n    let firstDelay = delay;\n    let newDelay = delay;\n    let count = 1;\n    timerId = setTimeout(() => {\n      createPromise(position, delay);\n    }, delay);\n    for (let i = 2; i <= amount; i += 1) {\n      if (amount >= count) {\n        newDelay += step;\n        count += 1;\n      }\n      timerId = setTimeout(() => {\n        createPromise(i, (firstDelay += step));\n      }, newDelay);\n    }\n    return;\n  }\n  delay = refs.delay.value;\n  for (let i = 1; i <= amount; i += 1) {\n    timerId = setTimeout(() => {\n      createPromise(i, delay);\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((reslove, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n  return promise;\n}\n"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","createPromisesButton","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","reslove","reject","Math","random","Notify","success","concat","failure","addEventListener","e","setTimeout","i1","preventDefault","count","newDelay","i","firstDelay","i2","_loop1","value","i11","_loop","Number","target"],"version":3,"file":"03-promises.a084adb8.js.map"}